{"version":3,"file":"xuder.js","sources":["../src/combineReducers","../src/utils.js","../src/Store.js"],"sourcesContent":["export default function combineReducers (reducersMap) {\n  return function (rootState = {}, action) {\n    for (let key in reducersMap) {\n      let subReducer = reducersMap[key]\n      let subState = rootState[key]\n      rootState[key] = subReducer(subState, action)\n    }\n\n    return rootState\n  }\n}","export function noop () {\n}\n\n/**\n * Shallow compare if two objects have different key or different value for same key(shallowly)\n * @param a Object a\n * @param b Object b\n * @returns {boolean}\n */\nexport function shallowCompare (a, b) {\n  for (let i in a) {\n    if (!(i in b)) {\n      return true\n    }\n  }\n\n  for (let i in b) {\n    if (a[i] !== b[i]) {\n      return true\n    }\n  }\n  return false\n}\n","import {noop} from './utils'\n\nexport const ActionTypes = {\n  INIT: '@@xuder/INIT'\n}\n\nexport default class Store {\n  constructor (reducer) {\n    this.reducer = reducer\n    this.state = reducer({}, {type: ActionTypes.INIT})\n    this.subscribers = []\n    this.dispatch =  this._dispatch.bind(this)\n  }\n\n  _dispatch (action) {\n    const me = this\n    this.state = this.reducer(this.state, action)\n\n    this\n      .subscribers\n      .forEach(function ({listener, mapStateToProps = noop, mapDispatchToProps = noop}) {\n        const stateProps = mapStateToProps(me.state) || {}\n        const dispatchProps = mapDispatchToProps(me.dispatch) || {}\n        listener(Object.assign({}, stateProps, dispatchProps))\n      })\n  }\n\n  subscribe (mapStateToProps, mapDispatchToProps) {\n    const me = this\n    return function (listener) {\n      const subscriber = {listener, mapStateToProps, mapDispatchToProps}\n      me.subscribers = me\n        .subscribers\n        .concat(subscriber)\n\n      // unsubscribe\n      return () => {\n        const index = this.subscribers.indexOf(listener)\n        this.subscribers.splice(index, 1)\n      }\n    }\n  }\n\n  getState () {\n    return this.state\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAe,SAAS,eAAe,EAAE,WAAW,EAAE;EACpD,OAAO,UAAU,SAAS,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,KAAK,IAAI,GAAG,IAAI,WAAW,EAAE;MAC3B,IAAI,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,CAAA;MACjC,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;MAC7B,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;KAC9C;;IAED,OAAO,SAAS;GACjB;;;ACTI,SAAS,IAAI,IAAI;CACvB;;;;;;;;AAQD,AAAO,SAAS,cAAc,EAAE,CAAC,EAAE,CAAC,EAAE;EACpC,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;IACf,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE;MACb,OAAO,IAAI;KACZ;GACF;;EAED,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;IACf,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MACjB,OAAO,IAAI;KACZ;GACF;EACD,OAAO,KAAK;CACb;;ACpBM,MAAM,WAAW,GAAG;EACzB,IAAI,EAAE,cAAc;CACrB,CAAA;;AAED,AAAe,MAAM,KAAK,CAAC;EACzB,WAAW,CAAC,CAAC,OAAO,EAAE;IACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IACtB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAA;IAClD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;IACrB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GAC3C;;EAED,SAAS,CAAC,CAAC,MAAM,EAAE;IACjB,MAAM,EAAE,GAAG,IAAI,CAAA;IACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;;IAE7C,IAAI;OACD,WAAW;OACX,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,eAAe,GAAG,IAAI,EAAE,kBAAkB,GAAG,IAAI,CAAC,EAAE;QAChF,MAAM,UAAU,GAAG,eAAe,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAClD,MAAM,aAAa,GAAG,kBAAkB,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;QAC3D,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,CAAA;OACvD,CAAC,CAAA;GACL;;EAED,SAAS,CAAC,CAAC,eAAe,EAAE,kBAAkB,EAAE;IAC9C,MAAM,EAAE,GAAG,IAAI,CAAA;IACf,OAAO,UAAU,QAAQ,EAAE;MACzB,MAAM,UAAU,GAAG,CAAC,QAAQ,EAAE,eAAe,EAAE,kBAAkB,CAAC,CAAA;MAClE,EAAE,CAAC,WAAW,GAAG,EAAE;SAChB,WAAW;SACX,MAAM,CAAC,UAAU,CAAC,CAAA;;;MAGrB,OAAO,MAAM;QACX,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;QAChD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;OAClC;KACF;GACF;;EAED,QAAQ,CAAC,GAAG;IACV,OAAO,IAAI,CAAC,KAAK;GAClB;CACF,;;;;,;;,;;"}